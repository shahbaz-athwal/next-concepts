generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            Int     @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  userId    Int
  User      User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

model User {
  id                  Int       @id @default(autoincrement())
  name                String?
  email               String?   @unique
  username            String?   @unique
  password            String?
  image               String?
  verifyCode          String?
  isVerified          Boolean?
  codeExpire          DateTime?
  emailVerified       DateTime? @map("email_verified")
  isAcceptingMessages Boolean   @default(true)
  messages            Message[]
  accounts            Account[]
}

model Review {
  id        Int      @id @default(autoincrement())
  name      String?
  username  String?
  comment   String?
  image     String?
  rating    Int
  createdAt DateTime @default(now())
}
